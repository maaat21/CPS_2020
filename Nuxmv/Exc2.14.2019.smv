-- Draw all the signals, as the usual!

MODULE main
VAR
		x: -5..5;
		clock: boolean;
		cnt: 1..20;
		sum: -110..110; -- ok also 100, but just to show that G(sum<=100)

ASSIGN
		init(cnt):= 1;
		init(sum):= 0;
		
		next(sum):=
		case
				clock: x;
				cnt=20: x; -- reset
				TRUE: (sum+x) mod 110; -- don't know why mod needed
		esac;		
		
		next(cnt):=
		case
				clock: 1;
				TRUE: cnt mod 20 + 1; -- reset
		esac;		
				
DEFINE
		y:=case
				cnt=1: sum;
				TRUE: sum/(-1+cnt);
		esac;

LTLSPEC
			G(clock -> next(sum)=x); -- Use next, not X
LTLSPEC
			G(clock -> next(y)=x);	
LTLSPEC
			G(clock -> X(cnt=1));
LTLSPEC
			G(clock -> X(y=sum));
LTLSPEC
			G(sum<=100); -- try <95
			